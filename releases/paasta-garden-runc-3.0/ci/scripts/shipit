#!/bin/bash
# vim: set ft=sh

set -exuo pipefail

base=$PWD

GARDEN_VERSION=$(cat "$base"/gr-version/number)
if [ -z "${GARDEN_VERSION:-}" ]; then
  echo "missing garden version number"
  exit 1
fi

GROOT_VERSION=$(cat "$base"/grootfs-release-tarball/version)
if [ -z "${GROOT_VERSION:-}" ]; then
  echo "missing groot version number"
  exit 1
fi

cp "$base"/garden-ci/config/private.yml "$base"/gr-release-develop/config/private.yml

CANDIDATE_DIR=$base/gr-candidate-tarball

(
cd gr-release-develop
git config --global user.email "ci@localhost"
git config --global user.name "CI Bot"

RELEASE_YML=$PWD/releases/garden-runc/garden-runc-${GARDEN_VERSION}.yml
tarball_path="$base/final-release/garden-runc-${GARDEN_VERSION}.tgz"

if [ -e "$RELEASE_YML" ]; then
  echo "release already created; making tarball..."
  bosh -n create-release --sha2 --tarball="$tarball_path" "$RELEASE_YML"
else
  echo "finalizing release"
  bosh -n finalize-release --sha2 --version "$GARDEN_VERSION" "${CANDIDATE_DIR}"/garden-runc-*.tgz
  mv "${CANDIDATE_DIR}"/garden-runc-*.tgz "$(dirname "$tarball_path")"
  git add -A
  git commit -m "release v${GARDEN_VERSION}"
fi

cp -r . ../release/master
)

# prepare github release
mv grootfs-release-tarball/release.tgz "github-release/grootfs-release-${GROOT_VERSION}.tgz"
mv gdn-linux-release/gdn "github-release/gdn-${GARDEN_VERSION}"
echo "* Verified with [grootfs-release v${GROOT_VERSION}](https://github.com/cloudfoundry/grootfs-release/releases/tag/v${GROOT_VERSION})" > github-release/notes
